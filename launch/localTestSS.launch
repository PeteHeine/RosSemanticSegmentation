<launch>	
	<!-- Semantic Segmentation node  -->
	<node type="semantic_segmentation.py" name="semantic_segmentation" pkg="semantic_segmentation" respawn="true" output="screen">
		<param name="topicInName" value="/usb_cam/image_raw" />
		<param name="objectType_unknown" value="True" />
		<param name="objectType_grass" value="True" />
		<param name="objectType_ground" value="True" />
		<param name="objectType_human" value="True" />
		<param name="objectType_shelterbelt" value="True" />
		<param name="objectType_vehicle" value="True" />
		<param name="objectType_water" value="True" />
		<param name="imgDimWidth" value="400" />
		<param name="imgDimHeight" value="300" />
		<param name="gpuDevice" value="-1" /> <!-- Select GPU device, negative values selects cpu -->
		<param name="dirModelDescription" value="$(find semantic_segmentation)/models/fcn-8s-pascal-deploy.prototxt" />
		<param name="dirModelVaules" value="$(find semantic_segmentation)/models/fcn-8s-pascalcontext.caffemodel" />
		<param name="dirTestImage" value="$(find semantic_segmentation)/src/Street2.jpg" />
		<param name="dirRemapping" value="$(find semantic_segmentation)/remappingObjectTypes.mat" />
	</node>

	<!-- usb_cam: RUNS usb CAM -->
	<node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
		<param name="video_device" value="/dev/video0" />
		<param name="image_width" value="640" /> <!-- 640 -->
		<param name="image_height" value="480" /> <!-- 480 -->
		<param name="pixel_format" value="yuyv" />
		<param name="camera_frame_id" value="usb_cam" />
		<param name="io_method" value="mmap"/>
	</node>

	<!-- Makes viewing node for showing detected pedestrians -->
	<node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
			<remap from="image" to="/semantic_segmentation/imageSS"/>
			<param name="autosize" value="false" />
	</node>


<!-- Use perspektive mapping to transform a detection image to an inverse sensor model -->
	<node type="image2ism.py" name="image2ismSS" pkg="image_inverse_sensor_model" respawn="true" output="screen">
		<param name="topicIns" value="/det/usb_cam/semantic_segmentation/grass /det/usb_cam/semantic_segmentation/ground /det/usb_cam/semantic_segmentation/human /det/usb_cam/semantic_segmentation/shelterbelt /det/usb_cam/semantic_segmentation/unknown /det/usb_cam/semantic_segmentation/vehicle /det/usb_cam/semantic_segmentation/water" /> <!-- Add multiple topics by seperating them by a space in topicIns-->
		<param name="imageWidth" value="400" />
		<param name="imageHeight" value="300" />
		<param name="cam_xTranslation" value="0.2038" /> 
		<param name="cam_yTranslation" value="0.255" />
		<param name="cam_zTranslation" value="2.056" />
		<param name="cam_pitch" value="0.1963" />  
		<param name="cam_yaw" value="0.0" />
		<param name="cam_FOV" value="0.68067" />
		<param name="grid_resolution" value="0.5" />
		<param name="grid_xSizeInM" value="-1.0" />
		<param name="grid_ySizeInM" value="-1.0" />
	</node>


<!-- Showing image detection for each object class -->
	<node name="image_view0" pkg="image_view" type="image_view" respawn="false" output="screen">
			<remap from="image" to="/det/usb_cam/semantic_segmentation/grass"/>
			<param name="autosize" value="false" />
			<param name="window_name" value="grass" />
	</node>
	<node name="image_view1" pkg="image_view" type="image_view" respawn="false" output="screen">
			<remap from="image" to="/det/usb_cam/semantic_segmentation/ground"/>
			<param name="autosize" value="false" />
			<param name="window_name" value="ground" />
	</node>
	<node name="image_view2" pkg="image_view" type="image_view" respawn="false" output="screen">
			<remap from="image" to="/det/usb_cam/semantic_segmentation/human"/>
			<param name="autosize" value="false" />
			<param name="window_name" value="human" />
	</node>
	<node name="image_view3" pkg="image_view" type="image_view" respawn="false" output="screen">
			<remap from="image" to="/det/usb_cam/semantic_segmentation/shelterbelt"/>
			<param name="autosize" value="false" />
			<param name="window_name" value="shelterbelt" />
	</node>
	<node name="image_view4" pkg="image_view" type="image_view" respawn="false" output="screen">
			<remap from="image" to="/det/usb_cam/semantic_segmentation/unknown"/>
			<param name="autosize" value="false" />
			<param name="window_name" value="unknown" />
	</node>
	<node name="image_view5" pkg="image_view" type="image_view" respawn="false" output="screen">
			<remap from="image" to="/det/usb_cam/semantic_segmentation/vehicle"/>
			<param name="autosize" value="false" />
			<param name="window_name" value="vehicle" />
	</node>
	<node name="image_view6" pkg="image_view" type="image_view" respawn="false" output="screen">
			<remap from="image" to="/det/usb_cam/semantic_segmentation/water"/>
			<param name="autosize" value="false" />
			<param name="window_name" value="water" />
	</node>

</launch>
